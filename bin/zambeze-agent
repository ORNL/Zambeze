# Copyright (c) 2022 Oak Ridge National Laboratory.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the MIT License.

import logging
import typer
import pathlib

from zambeze.orchestration.agent.agent import Agent

agent_app = typer.Typer()


@agent_app.command()
def start(
    log_path: str = typer.Option("", help="Path to logs on disk."),
    debug: bool = typer.Option(False, help="If debug logs are enabled."),
    config_path: str = typer.Option(str(pathlib.Path.home().joinpath(".zambeze").joinpath("agent.yaml")), help="Path to config.")
):
    """
    Start the agent (set logger and ZMQ ports).
    """

    # Log path comes from agents/commands.py
    agent_logger = logging.getLogger('agent')
    fh = logging.FileHandler(log_path)
    formatter = logging.Formatter("[Zambeze Agent] [%(levelname)s] %(asctime)s - %(message)s")
    fh.setFormatter(formatter)

    if debug:
        agent_logger.setLevel(logging.DEBUG)
    else:
        agent_logger.setLevel(logging.INFO)
    agent_logger.addHandler(fh)

    agent_logger.info("*****************************************************")
    agent_logger.info("Creating Zambeze agent subprocess with configuration:")
    agent_logger.info("*****************************************************")
    agent_logger.info(f"Log Path:\t\t{log_path}")
    agent_logger.info(f"Config Path:\t\t{config_path}")
    agent_logger.info(f"Debug Logs:\t\t{debug}")
    agent_logger.info("*****************************************************")

    # Quick fix to address empty string in CL-args.
    if config_path == "":
        config_path = None

    Agent(conf_file=config_path, logger=agent_logger)


if __name__ == "__main__":
    agent_app()
